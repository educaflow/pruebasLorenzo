<?xml version="1.0" encoding="UTF-8"?>
<domain-models xmlns="http://axelor.com/xml/ns/domain-models"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="http://axelor.com/xml/ns/domain-models https://axelor.com/xml/ns/domain-models/domain-models_7.4.xsd">

    <module name="expedientes" package="com.educaflow.apps.expedientes.db"/>

    <entity name="Expediente" strategy="JOINED" jsonAttrs="false">
        <many-to-one name="tipoExpediente" title="Tipo de Expediente" ref="com.educaflow.apps.expedientes.db.TipoExpediente" required="true"/>
        <string name="name" namecolumn="true" />
        <string name="numeroExpediente"  title="Num. Exped."  />
        <string name="codeState" title="Código del estado" />
        <string name="nameState" title="Estado" translatable="true" />
        <datetime name="fechaUltimoEstado" title="Fecha último estado" />
        <boolean name="closed" title="Cerrado" />
        <one-to-many name="historialEstados" ref="ExpedienteHistorialEstados" mappedBy="expediente" />
        <many-to-one name="centroReceptor" ref="com.educaflow.apps.configuracioncentro.db.Centro"  />
        <one-to-one name="valoresAmbitoCreador" ref="com.educaflow.apps.expedientes.db.ValoresAmbito"  title="Valores Ámbito del Creador" />
        <one-to-one name="valoresAmbitoResponsable" ref="com.educaflow.apps.expedientes.db.ValoresAmbito" title="Valores Ámbito del Responsable" />
        <one-to-one name="valoresAmbitoAuditor" ref="com.educaflow.apps.expedientes.db.ValoresAmbito" title="Valores Ámbito del Auditor" />

        <unique-constraint columns="numeroExpediente" />

        <extra-imports-model>
            <![CDATA[
                import com.axelor.inject.Beans;
                import java.util.ArrayList;
                import com.axelor.inject.Beans;
                import com.educaflow.apps.expedientes.common.StateEnum;
                import com.educaflow.common.pdf.DocumentoPdf;
                import java.io.ByteArrayInputStream;
                import java.io.IOException;
                import java.io.InputStream;
                import java.util.Map;
                import com.educaflow.common.pdf.DocumentoPdfUtil;
                import com.educaflow.common.pdf.DocumentoPdfFactory;
                import java.nio.file.Path;
            ]]>
        </extra-imports-model>

        <extra-code-model>
            <![CDATA[
  public void updateState(Enum state) {
      if (state==null) {
          throw new IllegalArgumentException("El state no puede ser nulo.");
      }
      String currentCodeState = this.getCodeState();

      StateEnum stateEnum = new StateEnum(state);
      if ((currentCodeState!=null) && (currentCodeState.equals(stateEnum.getCodeState()))) {
          return;
      }

      this.setCodeState(stateEnum.getCodeState());
      this.setNameState(com.educaflow.common.util.TextUtil.humanize(stateEnum.getCodeState()));
      this.setFechaUltimoEstado(java.time.LocalDateTime.now());
      this.setClosed(stateEnum.isClosed());
  }


    protected DocumentoPdf getDocumentoPdf(String documentoPdfFileName, Expediente expediente) {
        try {
            Class<?> callerClass = expediente.getClass();

            Path pathFileName= Path.of(documentoPdfFileName);

            try (InputStream in = callerClass.getResourceAsStream(documentoPdfFileName)) {
                if (in == null) {
                    throw new IOException("No se encontró el recurso: " + documentoPdfFileName);
                }
                DocumentoPdf documentoPdfVacio= DocumentoPdfFactory.getPdf(in.readAllBytes(), pathFileName.getFileName().toString());

                Map<String, Object> contexto = Map.of("self", expediente);

                DocumentoPdf documentoPdfRelleno = DocumentoPdfUtil.generate(documentoPdfVacio, contexto);

                return documentoPdfRelleno;

            }
        } catch (IOException e) {
            throw new RuntimeException("Error al cargar el documento PDF: " + documentoPdfFileName, e);
        }
    }

]]>
        </extra-code-model>
    </entity>


</domain-models>